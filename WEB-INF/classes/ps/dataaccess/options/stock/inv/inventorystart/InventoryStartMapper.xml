<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ps.dataaccess.options.stock.inv.inventorystart.InventoryStartMapper">

    <sql id="listKeyIdentityWhereCondition">
        <!-- 個人設定未定義の場合、条件に入らないため追加している -->
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(companyCd)">
         AND T_INVENTORY.COMPANY_CD = #{companyCd, jdbcType=VARCHAR}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(sectionPlaceCd)">
         AND T_INVENTORY.SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
        </if>
             ${@ps.common.util.ItemSettingUtil@getItemSettingWhereSQL()}
        <if test="@org.apache.commons.lang.StringUtils@equals('1',searchInd)">
         AND T_INVENTORY.INV_STATUS IN (
               '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_UNTREATED}'
             , '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_INVENTORY_STARTING}'
             )
        </if>
        <if test="@org.apache.commons.lang.StringUtils@equals('2',searchInd)">
         AND T_INVENTORY.INV_STATUS IN (
               '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_INVENTORY}'
             , '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_INVENTORY_CANCELLING}'
             , '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_SETTLING}'
             )
        </if>
        <if test="@org.apache.commons.lang.StringUtils@equals('3',searchInd)">
         AND T_INVENTORY.INV_STATUS IN (
               '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_SETTLE_END}'
             , '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_SETTLE_CANCELLING}'
             )
        </if>
    </sql>

    <sql id="viewSql">
             <!-- 在庫場所毎に集計 -->
        WITH V_STOCK AS
     (SELECT COMPANY_CD
           , SECTION_PLACE_CD
           , STOCK_PLACE_CD
        FROM T_STOCK
    GROUP BY COMPANY_CD
           , SECTION_PLACE_CD
           , STOCK_PLACE_CD)
             <!-- 棚卸管理テーブルを元に在庫場所、棚卸状態を抽出。棚卸年月から前回棚卸年月を算出 -->
           , V_INVENTORY_MNG AS
     (SELECT T_INVENTORY_MNG.COMPANY_CD
           , T_INVENTORY_MNG.SECTION_PLACE_CD
           , T_INVENTORY_MNG.STOCK_PLACE_CD
           , T_INVENTORY_MNG.INV_YEAR_MONTH
           ,(SELECT MAX(LAST.INV_YEAR_MONTH) FROM T_INVENTORY_MNG LAST
              WHERE T_INVENTORY_MNG.COMPANY_CD       = LAST.COMPANY_CD
                AND T_INVENTORY_MNG.SECTION_PLACE_CD = LAST.SECTION_PLACE_CD
                AND T_INVENTORY_MNG.STOCK_PLACE_CD   = LAST.STOCK_PLACE_CD
                AND T_INVENTORY_MNG.INV_YEAR_MONTH &gt; LAST.INV_YEAR_MONTH
             ) AS LAST_INV_YEAR_MONTH
           , T_INVENTORY_MNG.INV_STATUS_IND
           , T_INVENTORY_MNG.LAST_UPD_DATE
        FROM T_INVENTORY_MNG)
             <!-- 在庫場所マスタを元に在庫場所、棚卸状態を抽出。システム日付から前回棚卸年月を算出 -->
           , V_STOCK_PLACE AS
     (SELECT M_STOCK_PLACE.COMPANY_CD
           , M_STOCK_PLACE.SECTION_PLACE_CD
           , M_STOCK_PLACE.STOCK_PLACE_CD
           , NULL AS INV_YEAR_MONTH
           ,(SELECT MAX(LAST.INV_YEAR_MONTH) FROM T_INVENTORY_MNG LAST
              WHERE M_STOCK_PLACE.COMPANY_CD       = LAST.COMPANY_CD
                AND M_STOCK_PLACE.SECTION_PLACE_CD = LAST.SECTION_PLACE_CD
                AND M_STOCK_PLACE.STOCK_PLACE_CD   = LAST.STOCK_PLACE_CD
                AND '${@fw.common.util.AppUtil@getSysDate("yyyyMM")}' &gt;= LAST.INV_YEAR_MONTH
             ) AS LAST_INV_YEAR_MONTH
           ,(CASE WHEN V_STOCK.STOCK_PLACE_CD IS NULL
                  THEN N'${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_NO_STOCK}'
                  ELSE N'${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_UNTREATED}'
             END) AS INV_STATUS_IND
           , M_STOCK_PLACE.LAST_UPD_DATE
        FROM M_STOCK_PLACE
        LEFT OUTER JOIN V_STOCK
          ON M_STOCK_PLACE.COMPANY_CD       = V_STOCK.COMPANY_CD
         AND M_STOCK_PLACE.SECTION_PLACE_CD = V_STOCK.SECTION_PLACE_CD
         AND M_STOCK_PLACE.STOCK_PLACE_CD   = V_STOCK.STOCK_PLACE_CD)
             <!-- 上記で抽出したビューを元に集合-->
           , V_INVENTORY AS
     (SELECT V_INVENTORY_MNG.COMPANY_CD
           , V_INVENTORY_MNG.SECTION_PLACE_CD
           , V_INVENTORY_MNG.STOCK_PLACE_CD
           , V_INVENTORY_MNG.INV_YEAR_MONTH
           , V_INVENTORY_MNG.LAST_INV_YEAR_MONTH
           , V_INVENTORY_MNG.INV_STATUS_IND
           , V_INVENTORY_MNG.LAST_UPD_DATE
           , M_STOCK_PLACE.LAST_UPD_DATE AS STOCK_PLACE_LAST_UPD_DATE
        FROM V_INVENTORY_MNG
       LEFT OUTER JOIN M_STOCK_PLACE
         ON V_INVENTORY_MNG.COMPANY_CD       = M_STOCK_PLACE.COMPANY_CD
        AND V_INVENTORY_MNG.SECTION_PLACE_CD = M_STOCK_PLACE.SECTION_PLACE_CD
        AND V_INVENTORY_MNG.STOCK_PLACE_CD   = M_STOCK_PLACE.STOCK_PLACE_CD
       UNION ALL
      SELECT V_STOCK_PLACE.COMPANY_CD
           , V_STOCK_PLACE.SECTION_PLACE_CD
           , V_STOCK_PLACE.STOCK_PLACE_CD
           , V_STOCK_PLACE.INV_YEAR_MONTH
           , V_STOCK_PLACE.LAST_INV_YEAR_MONTH
           , V_STOCK_PLACE.INV_STATUS_IND
           , V_INVENTORY_MNG.LAST_UPD_DATE
           , V_STOCK_PLACE.LAST_UPD_DATE AS STOCK_PLACE_LAST_UPD_DATE
        FROM V_STOCK_PLACE
        LEFT OUTER JOIN V_INVENTORY_MNG
          ON V_STOCK_PLACE.COMPANY_CD          = V_INVENTORY_MNG.COMPANY_CD
         AND V_STOCK_PLACE.SECTION_PLACE_CD    = V_INVENTORY_MNG.SECTION_PLACE_CD
         AND V_STOCK_PLACE.STOCK_PLACE_CD      = V_INVENTORY_MNG.STOCK_PLACE_CD
         AND V_STOCK_PLACE.LAST_INV_YEAR_MONTH = V_INVENTORY_MNG.INV_YEAR_MONTH
       WHERE(V_INVENTORY_MNG.INV_STATUS_IND IS NULL
             OR V_INVENTORY_MNG.INV_STATUS_IND = '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_SETTLE_END}'))
    </sql>

    <sql id="listSql">
             <!--上記 viewSql で抽出したビューを整形-->
      SELECT V_INVENTORY.COMPANY_CD
           , V_INVENTORY.SECTION_PLACE_CD
           , V_INVENTORY.STOCK_PLACE_CD
           , COALESCE(V_INVENTORY.INV_YEAR_MONTH, N'999999') AS INV_YEAR_MONTH
           , V_INVENTORY.INV_STATUS_IND AS INV_STATUS
           , V_INVENTORY.LAST_INV_YEAR_MONTH
           , V_INVENTORY.INV_YEAR_MONTH AS THIS_INV_YEAR_MONTH
           , V_INVENTORY.LAST_UPD_DATE
           , V_INVENTORY.STOCK_PLACE_LAST_UPD_DATE
           , M_STOCK_PLACE.STOCK_LOCK_FLG
           , M_COMPANY_LANG.COMPANY_NAME
           , M_SECTION_PLACE_LANG.SECTION_PLACE_NAME
           , M_STOCK_PLACE_LANG.STOCK_PLACE_NAME
        FROM V_INVENTORY
       INNER JOIN M_COMPANY
          ON V_INVENTORY.COMPANY_CD = M_COMPANY.COMPANY_CD
       INNER JOIN M_STOCK_PLACE
          ON V_INVENTORY.COMPANY_CD       = M_STOCK_PLACE.COMPANY_CD
         AND V_INVENTORY.SECTION_PLACE_CD = M_STOCK_PLACE.SECTION_PLACE_CD
         AND V_INVENTORY.STOCK_PLACE_CD   = M_STOCK_PLACE.STOCK_PLACE_CD
        LEFT OUTER JOIN M_COMPANY_LANG
          ON M_COMPANY.COMPANY_CD = M_COMPANY_LANG.COMPANY_CD
         AND M_COMPANY_LANG.LANGUAGE_IND = '${@fw.security.SecurityUtil@getCompanyUseLanguageIndByEscapeSql()}'
        LEFT OUTER JOIN M_SECTION_PLACE_LANG
          ON M_STOCK_PLACE.COMPANY_CD       = M_SECTION_PLACE_LANG.COMPANY_CD
         AND M_STOCK_PLACE.SECTION_PLACE_CD = M_SECTION_PLACE_LANG.SECTION_PLACE_CD
         AND M_COMPANY_LANG.LANGUAGE_IND    = M_SECTION_PLACE_LANG.LANGUAGE_IND
        LEFT OUTER JOIN M_STOCK_PLACE_LANG
          ON M_STOCK_PLACE.COMPANY_CD       = M_STOCK_PLACE_LANG.COMPANY_CD
         AND M_STOCK_PLACE.SECTION_PLACE_CD = M_STOCK_PLACE_LANG.SECTION_PLACE_CD
         AND M_STOCK_PLACE.STOCK_PLACE_CD   = M_STOCK_PLACE_LANG.STOCK_PLACE_CD
         AND M_COMPANY_LANG.LANGUAGE_IND    = M_STOCK_PLACE_LANG.LANGUAGE_IND
    </sql>

    <resultMap id="identity_Map" type="fw.domain.options.stock.inv.inventorystart.InventoryStartIdentify">
        <id column="COMPANY_CD"       property="companyCd" />
        <id column="SECTION_PLACE_CD" property="sectionPlaceCd" />
        <id column="STOCK_PLACE_CD"   property="stockPlaceCd" />
        <id column="INV_YEAR_MONTH"   property="invYearMonth.dateOfym" />
        <id column="LAST_UPD_DATE"    property="lastUpdDate" />
    </resultMap>

    <resultMap id="item_Map" type="fw.domain.options.stock.inv.inventorystart.InventoryStartItem">
        <id column="COMPANY_CD"       property="inventoryStartIdentify.companyCd" />
        <id column="SECTION_PLACE_CD" property="inventoryStartIdentify.sectionPlaceCd" />
        <id column="STOCK_PLACE_CD"   property="inventoryStartIdentify.stockPlaceCd" />
        <id column="INV_YEAR_MONTH"   property="inventoryStartIdentify.invYearMonth.dateOfym" />
        <id column="LAST_UPD_DATE"    property="inventoryStartIdentify.lastUpdDate" />
        <id column="INV_STATUS"          property="invStatus.status" />
        <id column="LAST_INV_YEAR_MONTH" property="lastInvYearMonth.dateOfym" />
        <id column="THIS_INV_YEAR_MONTH" property="invYearMonth.dateOfym" />
        <id column="STOCK_LOCK_FLG"      property="stockLockFlg.stockLockFlg" />
        <id column="COMPANY_NAME"        property="companyName" />
        <id column="SECTION_PLACE_NAME"  property="sectionPlaceName" />
        <id column="STOCK_PLACE_NAME"    property="stockPlaceName" />
        <id column="STOCK_PLACE_LAST_UPD_DATE" property="stockPlaceLastUpdDate" />
    </resultMap>

    <select id="listKeyIdentity" parameterType="fw.domain.options.stock.inv.inventorystart.InventoryStartSearchCondition" resultMap="identity_Map">
        <include refid="viewSql"/>
      SELECT T_INVENTORY.COMPANY_CD
           , T_INVENTORY.SECTION_PLACE_CD
           , T_INVENTORY.STOCK_PLACE_CD
           , T_INVENTORY.INV_YEAR_MONTH
           , T_INVENTORY.LAST_UPD_DATE
        FROM(<include refid="listSql"/>) T_INVENTORY
        <where>
            <include refid="listKeyIdentityWhereCondition"/>
        </where>
    ORDER BY ${searchCondition.columnOrder.columnOrder()}
    </select>

    <select id="listPageItem" parameterType="fw.domain.options.stock.inv.inventorystart.InventoryStartSearchCondition" resultMap="item_Map">
        <include refid="viewSql"/>
      SELECT *
        FROM(<include refid="listSql"/>) T_INVENTORY
        <where>
            (T_INVENTORY.COMPANY_CD
           , T_INVENTORY.SECTION_PLACE_CD
           , T_INVENTORY.STOCK_PLACE_CD
           , T_INVENTORY.INV_YEAR_MONTH) IN
        <foreach collection="searchCondition.page.keyDomainEntityList" item="keyList" open="(" separator="," close=")">
            (#{keyList.companyCd, jdbcType=VARCHAR}
           , #{keyList.sectionPlaceCd, jdbcType=VARCHAR}
           , #{keyList.stockPlaceCd, jdbcType=VARCHAR}
           , #{keyList.invYearMonth.dateOfym, jdbcType=VARCHAR})
        </foreach>
            <include refid="listKeyIdentityWhereCondition"/>
        </where>
    ORDER BY ${searchCondition.columnOrder.columnOrder()}
    </select>

    <update id="updateStockLockFlg" parameterType="fw.domain.options.stock.inv.inventorystart.InventoryStartItem">
      UPDATE M_STOCK_PLACE
         SET STOCK_LOCK_FLG      = #{stockLockFlg.stockLockFlg, jdbcType=VARCHAR}
           , LAST_UPD_DATE       = '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
           , LAST_UPD_COMPANY_CD = '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
           , LAST_UPD_SECTION_CD = '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
           , LAST_UPD_USER_ID    = '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
       WHERE COMPANY_CD       = #{inventoryStartIdentify.companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{inventoryStartIdentify.sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{inventoryStartIdentify.stockPlaceCd, jdbcType=VARCHAR}
    </update>

</mapper>