<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ps.dataaccess.options.stock.common.storageshipment.StorageShipmentUtilMapper">

    <resultMap id="storageShipment_Map" type="fw.domain.options.stock.unit.storageshipment.StorageShipmentImpl">
        <id column="STRG_SHIP_RESULTS_SEQ"   property="strgShipResultsSeq" />
        <id column="STRG_SHIP_NO"            property="strgShipNo" />
        <id column="STRG_SHIP_IND"           property="strgShipInd" />
        <id column="STRG_SHIP_CLASS_IND"     property="strgShipClassInd" />
        <id column="CORRECT_CD"              property="correctCd" />
        <id column="RB_IND"                  property="rbInd" />
        <id column="RB_SEQ"                  property="rbSeq" />
        <id column="REQ_DATE"                property="reqDate" />
        <id column="REQ_COMPANY_CD"          property="reqCompanyCd" />
        <id column="REQ_COMPANY_NAME"        property="reqCompanyName" />
        <id column="REQ_SECTION_PLACE_CD"    property="reqSectionPlaceCd" />
        <id column="REQ_SECTION_PLACE_NAME"  property="reqSectionPlaceName" />
        <id column="REQ_SECTION_CD"          property="reqSectionCd" />
        <id column="REQ_SECTION_NAME"        property="reqSectionName" />
        <id column="REQ_USER_ID"             property="reqUserId" />
        <id column="REQ_USER_NAME"           property="reqUserName" />
        <id column="REQ_USER_EXTENSION_NO"   property="reqUserExtensionNo" />
        <id column="REQ_USER_TEL_NO"         property="reqUserTelNo" />
        <id column="TITLE_NAME"              property="titleName" />
        <id column="ITEM_CLASS_L"            property="itemClassL" />
        <id column="ITEM_CLASS_L_NAME"       property="itemClassLName" />
        <id column="ITEM_CLASS_M"            property="itemClassM" />
        <id column="ITEM_CLASS_M_NAME"       property="itemClassMName" />
        <id column="ITEM_CLASS_S"            property="itemClassS" />
        <id column="ITEM_CLASS_S_NAME"       property="itemClassSName" />
        <id column="ITEM_COMPANY_CD"         property="itemCompanyCd" />
        <id column="ITEM_CD"                 property="itemCd" />
        <id column="ITEM_NAME"               property="itemName" />
        <id column="KATASHIKI"               property="katashiki" />
        <id column="MANUFACT_CD"             property="manufactCd" />
        <id column="MANUFACT_NAME"           property="manufactName" />
        <id column="SHIP_COMPANY_CD"         property="shipCompanyCd" />
        <id column="SHIP_COMPANY_NAME"       property="shipCompanyName" />
        <id column="SHIP_SECTION_PLACE_CD"   property="shipSectionPlaceCd" />
        <id column="SHIP_SECTION_PLACE_NAME" property="shipSectionPlaceName" />
        <id column="SHIP_STOCK_PLACE_CD"     property="shipStockPlaceCd" />
        <id column="SHIP_STOCK_PLACE_NAME"   property="shipStockPlaceName" />
        <id column="STRG_COMPANY_CD"         property="strgCompanyCd" />
        <id column="STRG_COMPANY_NAME"       property="strgCompanyName" />
        <id column="STRG_SECTION_PLACE_CD"   property="strgSectionPlaceCd" />
        <id column="STRG_SECTION_PLACE_NAME" property="strgSectionPlaceName" />
        <id column="STRG_STOCK_PLACE_CD"     property="strgStockPlaceCd" />
        <id column="STRG_STOCK_PLACE_NAME"   property="strgStockPlaceName" />
        <id column="SUBJECT_COMPANY_CD"      property="subjectCompanyCd" />
        <id column="SUBJECT_CD"              property="subjectCd" />
        <id column="SUBJECT_NAME"            property="subjectName" />
        <id column="STRG_SHIP_DATE"          property="strgShipDate" />
        <id column="STRG_SHIP_VOL"           property="strgShipVol" />
        <id column="UNIT_CD"                 property="unitCd" />
        <id column="UNIT_NAME"               property="unitName" />
        <id column="CURRENCY_CD"             property="currencyCd" />
        <id column="STRG_SHIP_UNIT_PRICE"    property="strgShipUnitPrice" />
        <id column="STRG_SHIP_AMOUNT"        property="strgShipAmount" />
        <id column="STRG_SHIP_NOTE"          property="strgShipNote" />
        <id column="SETTLE_INV_IND"          property="settleInvInd" />
        <id column="DELIV_KEY_NO"            property="delivKeyNo" />
        <id column="ACCEPT_SEQ"              property="acceptSeq" />
        <id column="EXT_TXT_1"         property="editExtItem.editTextExtItem.textExtItem1.value"/>
        <id column="EXT_TXT_2"         property="editExtItem.editTextExtItem.textExtItem2.value"/>
        <id column="EXT_TXT_3"         property="editExtItem.editTextExtItem.textExtItem3.value"/>
        <id column="EXT_TXT_4"         property="editExtItem.editTextExtItem.textExtItem4.value"/>
        <id column="EXT_TXT_5"         property="editExtItem.editTextExtItem.textExtItem5.value"/>
        <id column="EXT_TXT_6"         property="editExtItem.editTextExtItem.textExtItem6.value"/>
        <id column="EXT_TXT_7"         property="editExtItem.editTextExtItem.textExtItem7.value"/>
        <id column="EXT_TXT_8"         property="editExtItem.editTextExtItem.textExtItem8.value"/>
        <id column="EXT_TXT_9"         property="editExtItem.editTextExtItem.textExtItem9.value"/>
        <id column="EXT_TXT_10"        property="editExtItem.editTextExtItem.textExtItem10.value"/>
        <id column="EXT_AREA_1"        property="editExtItem.editAreaExtItem.arrayExtItem1.value"/>
        <id column="EXT_AREA_2"        property="editExtItem.editAreaExtItem.arrayExtItem2.value"/>
        <id column="EXT_AREA_3"        property="editExtItem.editAreaExtItem.arrayExtItem3.value"/>
        <id column="EXT_AREA_4"        property="editExtItem.editAreaExtItem.arrayExtItem4.value"/>
        <id column="EXT_AREA_5"        property="editExtItem.editAreaExtItem.arrayExtItem5.value"/>
        <id column="EXT_DATE_1"        property="editExtItem.editDateExtItem.dateExtItem1.dateType.dateOfymd"/>
        <id column="EXT_DATE_2"        property="editExtItem.editDateExtItem.dateExtItem2.dateType.dateOfymd"/>
        <id column="EXT_DATE_3"        property="editExtItem.editDateExtItem.dateExtItem3.dateType.dateOfymd"/>
        <id column="EXT_DATE_4"        property="editExtItem.editDateExtItem.dateExtItem4.dateType.dateOfymd"/>
        <id column="EXT_DATE_5"        property="editExtItem.editDateExtItem.dateExtItem5.dateType.dateOfymd"/>
        <id column="EXT_INT_1"         property="editExtItem.editIntExtItem.intExtItem1.value"/>
        <id column="EXT_INT_2"         property="editExtItem.editIntExtItem.intExtItem2.value"/>
        <id column="EXT_INT_3"         property="editExtItem.editIntExtItem.intExtItem3.value"/>
        <id column="EXT_INT_4"         property="editExtItem.editIntExtItem.intExtItem4.value"/>
        <id column="EXT_INT_5"         property="editExtItem.editIntExtItem.intExtItem5.value"/>
        <id column="EXT_INT_6"         property="editExtItem.editIntExtItem.intExtItem6.value"/>
        <id column="EXT_INT_7"         property="editExtItem.editIntExtItem.intExtItem7.value"/>
        <id column="EXT_INT_8"         property="editExtItem.editIntExtItem.intExtItem8.value"/>
        <id column="EXT_INT_9"         property="editExtItem.editIntExtItem.intExtItem9.value"/>
        <id column="EXT_INT_10"        property="editExtItem.editIntExtItem.intExtItem10.value"/>
        <id column="EXT_DEC_1"         property="editExtItem.editDecExtItem.decExtItem1.value"/>
        <id column="EXT_DEC_2"         property="editExtItem.editDecExtItem.decExtItem2.value"/>
        <id column="EXT_DEC_3"         property="editExtItem.editDecExtItem.decExtItem3.value"/>
        <id column="EXT_DEC_4"         property="editExtItem.editDecExtItem.decExtItem4.value"/>
        <id column="EXT_DEC_5"         property="editExtItem.editDecExtItem.decExtItem5.value"/>
        <id column="EXT_SEL_1"         property="editExtItem.editSelExtItem.selExtItem1.value"/>
        <id column="EXT_SEL_2"         property="editExtItem.editSelExtItem.selExtItem2.value"/>
        <id column="EXT_SEL_3"         property="editExtItem.editSelExtItem.selExtItem3.value"/>
        <id column="EXT_SEL_4"         property="editExtItem.editSelExtItem.selExtItem4.value"/>
        <id column="EXT_SEL_5"         property="editExtItem.editSelExtItem.selExtItem5.value"/>
        <id column="EXT_SEL_6"         property="editExtItem.editSelExtItem.selExtItem6.value"/>
        <id column="EXT_SEL_7"         property="editExtItem.editSelExtItem.selExtItem7.value"/>
        <id column="EXT_SEL_8"         property="editExtItem.editSelExtItem.selExtItem8.value"/>
        <id column="EXT_SEL_9"         property="editExtItem.editSelExtItem.selExtItem9.value"/>
        <id column="EXT_SEL_10"        property="editExtItem.editSelExtItem.selExtItem10.value"/>
        <id column="EXT_CHK_1"         property="editExtItem.editChkExtItem.chkExtItem1.value"/>
        <id column="EXT_CHK_2"         property="editExtItem.editChkExtItem.chkExtItem2.value"/>
        <id column="EXT_CHK_3"         property="editExtItem.editChkExtItem.chkExtItem3.value"/>
        <id column="EXT_CHK_4"         property="editExtItem.editChkExtItem.chkExtItem4.value"/>
        <id column="EXT_CHK_5"         property="editExtItem.editChkExtItem.chkExtItem5.value"/>
        <id column="EXT_FILE_1"        property="editExtItem.editFileExtItem.fileExtItem1.fileName"/>
        <id column="EXT_FILE_2"        property="editExtItem.editFileExtItem.fileExtItem2.fileName"/>
        <id column="EXT_FILE_3"        property="editExtItem.editFileExtItem.fileExtItem3.fileName"/>
        <id column="EXT_FILE_BINARY_1" property="editExtItem.editFileExtItem.fileExtItem1.binary"/>
        <id column="EXT_FILE_BINARY_2" property="editExtItem.editFileExtItem.fileExtItem2.binary"/>
        <id column="EXT_FILE_BINARY_3" property="editExtItem.editFileExtItem.fileExtItem3.binary"/>
        <id column="EXT_MST_1"         property="editExtItem.editMstExtItem.mstExtItem1.mstKey"/>
        <id column="EXT_MST_2"         property="editExtItem.editMstExtItem.mstExtItem2.mstKey"/>
        <id column="EXT_MST_3"         property="editExtItem.editMstExtItem.mstExtItem3.mstKey"/>
        <id column="EXT_MST_4"         property="editExtItem.editMstExtItem.mstExtItem4.mstKey"/>
        <id column="EXT_MST_5"         property="editExtItem.editMstExtItem.mstExtItem5.mstKey"/>
        <id column="EXT_MST_6"         property="editExtItem.editMstExtItem.mstExtItem6.mstKey"/>
        <id column="EXT_MST_7"         property="editExtItem.editMstExtItem.mstExtItem7.mstKey"/>
        <id column="EXT_MST_8"         property="editExtItem.editMstExtItem.mstExtItem8.mstKey"/>
        <id column="EXT_MST_NAME_1"    property="editExtItem.editMstExtItem.mstExtItem1.mstName"/>
        <id column="EXT_MST_NAME_2"    property="editExtItem.editMstExtItem.mstExtItem2.mstName"/>
        <id column="EXT_MST_NAME_3"    property="editExtItem.editMstExtItem.mstExtItem3.mstName"/>
        <id column="EXT_MST_NAME_4"    property="editExtItem.editMstExtItem.mstExtItem4.mstName"/>
        <id column="EXT_MST_NAME_5"    property="editExtItem.editMstExtItem.mstExtItem5.mstName"/>
        <id column="EXT_MST_NAME_6"    property="editExtItem.editMstExtItem.mstExtItem6.mstName"/>
        <id column="EXT_MST_NAME_7"    property="editExtItem.editMstExtItem.mstExtItem7.mstName"/>
        <id column="EXT_MST_NAME_8"    property="editExtItem.editMstExtItem.mstExtItem8.mstName"/>
    </resultMap>
    <!-- 入出庫実績シーケンス番号を元に入出庫実績テーブルから入出庫実績を取得します。 -->
    <select id="search" resultMap="storageShipment_Map">
      SELECT STRG_SHIP_RESULTS_SEQ
           , STRG_SHIP_NO
           , LAST_UPD_DATE
           , STRG_SHIP_IND
           , STRG_SHIP_CLASS_IND
           , CORRECT_CD
           , RB_IND
           , RB_SEQ
           , REQ_DATE
           , REQ_COMPANY_CD
           , REQ_COMPANY_NAME
           , REQ_SECTION_PLACE_CD
           , REQ_SECTION_PLACE_NAME
           , REQ_SECTION_CD
           , REQ_SECTION_NAME
           , REQ_USER_ID
           , REQ_USER_NAME
           , REQ_USER_EXTENSION_NO
           , REQ_USER_TEL_NO
           , TITLE_NAME
           , ITEM_CLASS_L
           , ITEM_CLASS_L_NAME
           , ITEM_CLASS_M
           , ITEM_CLASS_M_NAME
           , ITEM_CLASS_S
           , ITEM_CLASS_S_NAME
           , ITEM_COMPANY_CD
           , ITEM_CD
           , ITEM_NAME
           , KATASHIKI
           , MANUFACT_CD
           , MANUFACT_NAME
           , SHIP_COMPANY_CD
           , SHIP_COMPANY_NAME
           , SHIP_SECTION_PLACE_CD
           , SHIP_SECTION_PLACE_NAME
           , SHIP_STOCK_PLACE_CD
           , SHIP_STOCK_PLACE_NAME
           , STRG_COMPANY_CD
           , STRG_COMPANY_NAME
           , STRG_SECTION_PLACE_CD
           , STRG_SECTION_PLACE_NAME
           , STRG_STOCK_PLACE_CD
           , STRG_STOCK_PLACE_NAME
           , SUBJECT_COMPANY_CD
           , SUBJECT_CD
           , SUBJECT_NAME
           , STRG_SHIP_DATE
           , STRG_SHIP_VOL
           , UNIT_CD
           , UNIT_NAME
           , CURRENCY_CD
           , STRG_SHIP_UNIT_PRICE
           , STRG_SHIP_AMOUNT
           , STRG_SHIP_NOTE
           , SETTLE_INV_IND
           , DELIV_KEY_NO
           , ACCEPT_SEQ
           , ${@ps.common.util.ItemSettingUtil@getItemSettingSelectSQL("T_STRG_SHIP_RESULTS")}
        FROM T_STRG_SHIP_RESULTS
       WHERE STRG_SHIP_RESULTS_SEQ = #{strgShipResultsSeq, jdbcType=NUMERIC}
    </select>
    <!-- 入出庫情報を元に入出庫実績テーブルへ黒データを登録します。 -->
    <insert id="insertStrgShipResultsWithNew">
      INSERT INTO T_STRG_SHIP_RESULTS (
        STRG_SHIP_RESULTS_SEQ
      , STRG_SHIP_NO
      , STRG_SHIP_IND
      , STRG_SHIP_CLASS_IND
      , CORRECT_CD
      , RB_IND
      , RB_SEQ
      , REQ_DATE
      , REQ_COMPANY_CD
      , REQ_COMPANY_NAME
      , REQ_SECTION_PLACE_CD
      , REQ_SECTION_PLACE_NAME
      , REQ_SECTION_CD
      , REQ_SECTION_NAME
      , REQ_USER_ID
      , REQ_USER_NAME
      , REQ_USER_EXTENSION_NO
      , REQ_USER_TEL_NO
      , TITLE_NAME
      , ITEM_CLASS_L
      , ITEM_CLASS_L_NAME
      , ITEM_CLASS_M
      , ITEM_CLASS_M_NAME
      , ITEM_CLASS_S
      , ITEM_CLASS_S_NAME
      , ITEM_COMPANY_CD
      , ITEM_CD
      , ITEM_NAME
      , KATASHIKI
      , MANUFACT_CD
      , MANUFACT_NAME
      , SHIP_COMPANY_CD
      , SHIP_COMPANY_NAME
      , SHIP_SECTION_PLACE_CD
      , SHIP_SECTION_PLACE_NAME
      , SHIP_STOCK_PLACE_CD
      , SHIP_STOCK_PLACE_NAME
      , STRG_COMPANY_CD
      , STRG_COMPANY_NAME
      , STRG_SECTION_PLACE_CD
      , STRG_SECTION_PLACE_NAME
      , STRG_STOCK_PLACE_CD
      , STRG_STOCK_PLACE_NAME
      , SUBJECT_COMPANY_CD
      , SUBJECT_CD
      , SUBJECT_NAME
      , STRG_SHIP_DATE
      , STRG_SHIP_VOL
      , UNIT_CD
      , UNIT_NAME
      , CURRENCY_CD
      , STRG_SHIP_UNIT_PRICE
      , STRG_SHIP_AMOUNT
      , STRG_SHIP_NOTE
      , SETTLE_INV_IND
      , DELIV_KEY_NO
      , ACCEPT_SEQ
      , AUTO_DELETE_FLG
      , AUTO_DELETE_DATE
      , LAST_UPD_DATE
      , LAST_UPD_COMPANY_CD
      , LAST_UPD_SECTION_CD
      , LAST_UPD_USER_ID
      , REG_DATE
      , REG_COMPANY_CD
      , REG_SECTION_CD
      , REG_USER_ID
      , ${@ps.common.util.ItemSettingUtil@getItemSettingInsertSQL()}
      ) VALUES (
        #{strgShipResultsSeq, jdbcType=NUMERIC}
      , #{strgShipNo, jdbcType=VARCHAR}
      , #{storageShipment.strgShipInd, jdbcType=VARCHAR}
      , #{storageShipment.strgShipClassInd, jdbcType=VARCHAR}
      , #{storageShipment.correctCd, jdbcType=VARCHAR}
      , #{storageShipment.rbInd, jdbcType=VARCHAR}
      , #{storageShipment.rbSeq, jdbcType=NUMERIC}
      , #{storageShipment.reqDate, jdbcType=VARCHAR}
      , #{storageShipment.reqCompanyCd, jdbcType=VARCHAR}
      , #{storageShipment.reqCompanyName, jdbcType=VARCHAR}
      , #{storageShipment.reqSectionPlaceCd, jdbcType=VARCHAR}
      , #{storageShipment.reqSectionPlaceName, jdbcType=VARCHAR}
      , #{storageShipment.reqSectionCd, jdbcType=VARCHAR}
      , #{storageShipment.reqSectionName, jdbcType=VARCHAR}
      , #{storageShipment.reqUserId, jdbcType=VARCHAR}
      , #{storageShipment.reqUserName, jdbcType=VARCHAR}
      , #{storageShipment.reqUserExtensionNo, jdbcType=VARCHAR}
      , #{storageShipment.reqUserTelNo, jdbcType=VARCHAR}
      , #{storageShipment.titleName, jdbcType=VARCHAR}
      , #{storageShipment.itemClassL, jdbcType=VARCHAR}
      , #{storageShipment.itemClassLName, jdbcType=VARCHAR}
      , #{storageShipment.itemClassM, jdbcType=VARCHAR}
      , #{storageShipment.itemClassMName, jdbcType=VARCHAR}
      , #{storageShipment.itemClassS, jdbcType=VARCHAR}
      , #{storageShipment.itemClassSName, jdbcType=VARCHAR}
      , #{storageShipment.itemCompanyCd, jdbcType=VARCHAR}
      , #{storageShipment.itemCd, jdbcType=VARCHAR}
      , #{storageShipment.itemName, jdbcType=VARCHAR}
      , #{storageShipment.katashiki, jdbcType=VARCHAR}
      , #{storageShipment.manufactCd, jdbcType=VARCHAR}
      , #{storageShipment.manufactName, jdbcType=VARCHAR}
      , #{storageShipment.shipCompanyCd, jdbcType=VARCHAR}
      , #{storageShipment.shipCompanyName, jdbcType=VARCHAR}
      , #{storageShipment.shipSectionPlaceCd, jdbcType=VARCHAR}
      , #{storageShipment.shipSectionPlaceName, jdbcType=VARCHAR}
      , #{storageShipment.shipStockPlaceCd, jdbcType=VARCHAR}
      , #{storageShipment.shipStockPlaceName, jdbcType=VARCHAR}
      , #{storageShipment.strgCompanyCd, jdbcType=VARCHAR}
      , #{storageShipment.strgCompanyName, jdbcType=VARCHAR}
      , #{storageShipment.strgSectionPlaceCd, jdbcType=VARCHAR}
      , #{storageShipment.strgSectionPlaceName, jdbcType=VARCHAR}
      , #{storageShipment.strgStockPlaceCd, jdbcType=VARCHAR}
      , #{storageShipment.strgStockPlaceName, jdbcType=VARCHAR}
      , #{storageShipment.subjectCompanyCd, jdbcType=VARCHAR}
      , #{storageShipment.subjectCd, jdbcType=VARCHAR}
      , #{storageShipment.subjectName, jdbcType=VARCHAR}
      , #{storageShipment.strgShipDate, jdbcType=VARCHAR}
      , #{storageShipment.strgShipVol, jdbcType=NUMERIC}
      , #{storageShipment.unitCd, jdbcType=VARCHAR}
      , #{storageShipment.unitName, jdbcType=VARCHAR}
      , #{storageShipment.currencyCd, jdbcType=VARCHAR}
      , #{storageShipment.strgShipUnitPrice, jdbcType=NUMERIC}
      , #{storageShipment.strgShipAmount, jdbcType=NUMERIC}
      , #{storageShipment.strgShipNote, jdbcType=VARCHAR}
      , #{storageShipment.settleInvInd, jdbcType=VARCHAR}
      , #{storageShipment.delivKeyNo, jdbcType=VARCHAR}
      , #{storageShipment.acceptSeq, jdbcType=NUMERIC}
      , '0'
      , NULL
      , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
      , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
      , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
      , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
      , ${@ps.common.util.ItemSettingUtil@getItemSettingInsertValueSQL("storageShipment.editExtItem.")}
      )
    </insert>
     <!-- 入出庫情報を元に入出庫実績テーブルへ赤データを登録します。 -->
    <insert id="insertStrgShipResultsWithCancel">
      INSERT INTO T_STRG_SHIP_RESULTS (
        STRG_SHIP_RESULTS_SEQ
      , STRG_SHIP_NO
      , STRG_SHIP_IND
      , STRG_SHIP_CLASS_IND
      , CORRECT_CD
      , RB_IND
      , RB_SEQ
      , REQ_DATE
      , REQ_COMPANY_CD
      , REQ_COMPANY_NAME
      , REQ_SECTION_PLACE_CD
      , REQ_SECTION_PLACE_NAME
      , REQ_SECTION_CD
      , REQ_SECTION_NAME
      , REQ_USER_ID
      , REQ_USER_NAME
      , REQ_USER_EXTENSION_NO
      , REQ_USER_TEL_NO
      , TITLE_NAME
      , ITEM_CLASS_L
      , ITEM_CLASS_L_NAME
      , ITEM_CLASS_M
      , ITEM_CLASS_M_NAME
      , ITEM_CLASS_S
      , ITEM_CLASS_S_NAME
      , ITEM_COMPANY_CD
      , ITEM_CD
      , ITEM_NAME
      , KATASHIKI
      , MANUFACT_CD
      , MANUFACT_NAME
      , SHIP_COMPANY_CD
      , SHIP_COMPANY_NAME
      , SHIP_SECTION_PLACE_CD
      , SHIP_SECTION_PLACE_NAME
      , SHIP_STOCK_PLACE_CD
      , SHIP_STOCK_PLACE_NAME
      , STRG_COMPANY_CD
      , STRG_COMPANY_NAME
      , STRG_SECTION_PLACE_CD
      , STRG_SECTION_PLACE_NAME
      , STRG_STOCK_PLACE_CD
      , STRG_STOCK_PLACE_NAME
      , SUBJECT_COMPANY_CD
      , SUBJECT_CD
      , SUBJECT_NAME
      , STRG_SHIP_DATE
      , STRG_SHIP_VOL
      , UNIT_CD
      , UNIT_NAME
      , CURRENCY_CD
      , STRG_SHIP_UNIT_PRICE
      , STRG_SHIP_AMOUNT
      , STRG_SHIP_NOTE
      , SETTLE_INV_IND
      , DELIV_KEY_NO
      , ACCEPT_SEQ
      , AUTO_DELETE_FLG
      , AUTO_DELETE_DATE
      , LAST_UPD_DATE
      , LAST_UPD_COMPANY_CD
      , LAST_UPD_SECTION_CD
      , LAST_UPD_USER_ID
      , REG_DATE
      , REG_COMPANY_CD
      , REG_SECTION_CD
      , REG_USER_ID
      , ${@ps.common.util.ItemSettingUtil@getItemSettingInsertSQL()}
      )
      SELECT #{strgShipResultsSeq, jdbcType=NUMERIC}
           , STRG_SHIP_NO
           , STRG_SHIP_IND
           , STRG_SHIP_CLASS_IND
           , '${@fw.common.constant.CodeNameConstant@CORRECT_CD_CANCEL}'
           , '${@fw.common.constant.CodeNameConstant@RB_IND_RED}'
           , STRG_SHIP_RESULTS_SEQ
           , REQ_DATE
           , REQ_COMPANY_CD
           , REQ_COMPANY_NAME
           , REQ_SECTION_PLACE_CD
           , REQ_SECTION_PLACE_NAME
           , REQ_SECTION_CD
           , REQ_SECTION_NAME
           , REQ_USER_ID
           , REQ_USER_NAME
           , REQ_USER_EXTENSION_NO
           , REQ_USER_TEL_NO
           , TITLE_NAME
           , ITEM_CLASS_L
           , ITEM_CLASS_L_NAME
           , ITEM_CLASS_M
           , ITEM_CLASS_M_NAME
           , ITEM_CLASS_S
           , ITEM_CLASS_S_NAME
           , ITEM_COMPANY_CD
           , ITEM_CD
           , ITEM_NAME
           , KATASHIKI
           , MANUFACT_CD
           , MANUFACT_NAME
           , SHIP_COMPANY_CD
           , SHIP_COMPANY_NAME
           , SHIP_SECTION_PLACE_CD
           , SHIP_SECTION_PLACE_NAME
           , SHIP_STOCK_PLACE_CD
           , SHIP_STOCK_PLACE_NAME
           , STRG_COMPANY_CD
           , STRG_COMPANY_NAME
           , STRG_SECTION_PLACE_CD
           , STRG_SECTION_PLACE_NAME
           , STRG_STOCK_PLACE_CD
           , STRG_STOCK_PLACE_NAME
           , SUBJECT_COMPANY_CD
           , SUBJECT_CD
           , SUBJECT_NAME
           , STRG_SHIP_DATE
           , STRG_SHIP_VOL * -1
           , UNIT_CD
           , UNIT_NAME
           , CURRENCY_CD
           , STRG_SHIP_UNIT_PRICE
           , STRG_SHIP_AMOUNT * -1
           , NULL
           , '${@fw.common.options.stock.constant.CodeNameConstantForStock@SETTLE_INV_IND_NORMAL}'
           , DELIV_KEY_NO
           , #{storageShipment.acceptSeq, jdbcType=NUMERIC}
           , '0'
           , NULL
           , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
           , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
           , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
           , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
           , ${@ps.common.util.ItemSettingUtil@getItemSettingSelectSQL("T_STRG_SHIP_RESULTS")}
        FROM T_STRG_SHIP_RESULTS
       WHERE STRG_SHIP_RESULTS_SEQ = #{storageShipment.strgShipResultsSeq, jdbcType=NUMERIC}
    </insert>
     <!-- 入出庫実績シーケンス番号を元に入出庫実績テーブルの赤黒相手シーケンスを更新します。 -->
    <update id="updateRbSeqForStrgShipResults">
      UPDATE T_STRG_SHIP_RESULTS SET
        RB_SEQ = #{rbSeq, jdbcType=NUMERIC}
      , LAST_UPD_DATE       = '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
      , LAST_UPD_COMPANY_CD = '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
      , LAST_UPD_SECTION_CD = '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
      , LAST_UPD_USER_ID    = '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
       WHERE STRG_SHIP_RESULTS_SEQ = #{strgShipResultsSeq, jdbcType=VARCHAR}
    </update>
    <!-- 入出庫情報の検収シーケンス番号を元に検収テーブルを抽出し、それを元に入出庫実績テーブルへ黒データを登録します。 -->
    <insert id="insertStrgShipResultsWithAcceptNew">
      INSERT INTO T_STRG_SHIP_RESULTS (
        STRG_SHIP_RESULTS_SEQ
      , STRG_SHIP_NO
      , STRG_SHIP_IND
      , STRG_SHIP_CLASS_IND
      , CORRECT_CD
      , RB_IND
      , RB_SEQ
      , REQ_DATE
      , REQ_COMPANY_CD
      , REQ_COMPANY_NAME
      , REQ_SECTION_PLACE_CD
      , REQ_SECTION_PLACE_NAME
      , REQ_SECTION_CD
      , REQ_SECTION_NAME
      , REQ_USER_ID
      , REQ_USER_NAME
      , REQ_USER_EXTENSION_NO
      , REQ_USER_TEL_NO
      , TITLE_NAME
      , ITEM_CLASS_L
      , ITEM_CLASS_L_NAME
      , ITEM_CLASS_M
      , ITEM_CLASS_M_NAME
      , ITEM_CLASS_S
      , ITEM_CLASS_S_NAME
      , ITEM_COMPANY_CD
      , ITEM_CD
      , ITEM_NAME
      , KATASHIKI
      , MANUFACT_CD
      , MANUFACT_NAME
      , SHIP_COMPANY_CD
      , SHIP_COMPANY_NAME
      , SHIP_SECTION_PLACE_CD
      , SHIP_SECTION_PLACE_NAME
      , SHIP_STOCK_PLACE_CD
      , SHIP_STOCK_PLACE_NAME
      , STRG_COMPANY_CD
      , STRG_COMPANY_NAME
      , STRG_SECTION_PLACE_CD
      , STRG_SECTION_PLACE_NAME
      , STRG_STOCK_PLACE_CD
      , STRG_STOCK_PLACE_NAME
      , SUBJECT_COMPANY_CD
      , SUBJECT_CD
      , SUBJECT_NAME
      , STRG_SHIP_DATE
      , STRG_SHIP_VOL
      , UNIT_CD
      , UNIT_NAME
      , CURRENCY_CD
      , STRG_SHIP_UNIT_PRICE
      , STRG_SHIP_AMOUNT
      , STRG_SHIP_NOTE
      , SETTLE_INV_IND
      , DELIV_KEY_NO
      , ACCEPT_SEQ
      , AUTO_DELETE_FLG
      , AUTO_DELETE_DATE
      , LAST_UPD_DATE
      , LAST_UPD_COMPANY_CD
      , LAST_UPD_SECTION_CD
      , LAST_UPD_USER_ID
      , REG_DATE
      , REG_COMPANY_CD
      , REG_SECTION_CD
      , REG_USER_ID
      )
      SELECT #{strgShipResultsSeq, jdbcType=NUMERIC}
           , #{strgShipNo, jdbcType=VARCHAR}
           , '${@fw.common.options.stock.constant.CodeNameConstantForStock@STRG_SHIP_IND_STRG}'
           , #{storageShipment.strgShipClassInd, jdbcType=VARCHAR}
           , '${@fw.common.constant.CodeNameConstant@CORRECT_CD_NEW}'
           , '${@fw.common.constant.CodeNameConstant@RB_IND_BLACK}'
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , T_ORDER.TITLE_NAME
           , M_ITEM.ITEM_CLASS_L
           , M_ITEM_CLASS_L_LANG.ITEM_CLASS_NAME
           , M_ITEM.ITEM_CLASS_M
           , M_ITEM_CLASS_M_LANG.ITEM_CLASS_NAME
           , M_ITEM.ITEM_CLASS_S
           , M_ITEM_CLASS_S_LANG.ITEM_CLASS_NAME
           , T_ORDER.ITEM_COMPANY_CD
           , T_ORDER.ITEM_CD
           , T_ORDER.ITEM_NAME
           , T_ORDER.KATASHIKI
           , T_ORDER.MANUFACT_CD
           , T_ORDER.MANUFACT_NAME
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , NULL
           , T_ACCEPTANCE.STOCK_COMPANY_CD
           , M_COMPANY_LANG.COMPANY_NAME
           , T_ACCEPTANCE.STOCK_SECTION_PLACE_CD
           , M_SECTION_PLACE_LANG.SECTION_PLACE_NAME
           , T_ACCEPTANCE.STOCK_PLACE_CD
           , T_ACCEPTANCE.STOCK_PLACE_NAME
           , T_ACCEPTANCE.SUBJECT_COMPANY_CD
           , T_ACCEPTANCE.SUBJECT_CD
           , T_ACCEPTANCE.SUBJECT_NAME
           , T_ACCEPTANCE.ACCEPT_DATE
           , T_ACCEPTANCE.ACCEPT_VOL
           , T_ACCEPTANCE.UNIT_CD
           , T_ACCEPTANCE.UNIT_NAME
           , T_ACCEPTANCE.CURRENCY_CD
           , T_ACCEPTANCE.UNIT_PRICE
           , T_ACCEPTANCE.ACCEPT_AMOUNT
           , NULL
           , '${@fw.common.options.stock.constant.CodeNameConstantForStock@SETTLE_INV_IND_NORMAL}'
           , T_ACCEPTANCE.DELIV_KEY_NO
           , T_ACCEPTANCE.ACCEPT_SEQ
           , '0'
           , NULL
           , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
           , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
           , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
           , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
           , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
        FROM T_ACCEPTANCE
       INNER JOIN T_ORDER
          ON T_ACCEPTANCE.ORDER_NO = T_ORDER.ORDER_NO
         AND T_ORDER.NEW_APP_FLG = '1'
        LEFT OUTER JOIN M_COMPANY_LANG
          ON T_ACCEPTANCE.STOCK_COMPANY_CD = M_COMPANY_LANG.COMPANY_CD
         AND M_COMPANY_LANG.LANGUAGE_IND   = '${@fw.security.SecurityUtil@getCompanyUseLanguageIndByEscapeSql()}'
        LEFT OUTER JOIN M_SECTION_PLACE_LANG
          ON T_ACCEPTANCE.STOCK_COMPANY_CD       = M_SECTION_PLACE_LANG.COMPANY_CD
         AND T_ACCEPTANCE.STOCK_SECTION_PLACE_CD = M_SECTION_PLACE_LANG.SECTION_PLACE_CD
         AND M_COMPANY_LANG.LANGUAGE_IND         = M_SECTION_PLACE_LANG.LANGUAGE_IND
        LEFT OUTER JOIN M_ITEM
          ON T_ORDER.ITEM_COMPANY_CD = M_ITEM.COMPANY_CD
         AND T_ORDER.ITEM_CD         = M_ITEM.ITEM_CD
        LEFT OUTER JOIN M_ITEM_CLASS M_ITEM_CLASS_L
          ON M_ITEM.ITEM_CLASS_L = M_ITEM_CLASS_L.ITEM_CLASS_L
         AND M_ITEM_CLASS_L.ITEM_CLASS_M   = ' '
         AND M_ITEM_CLASS_L.ITEM_CLASS_S   = ' '
         AND M_ITEM_CLASS_L.ITEM_CLASS_IND = '1'
        LEFT OUTER JOIN M_ITEM_CLASS_LANG M_ITEM_CLASS_L_LANG
          ON M_ITEM_CLASS_L.ITEM_CLASS_L = M_ITEM_CLASS_L_LANG.ITEM_CLASS_L
         AND M_ITEM_CLASS_L.ITEM_CLASS_M = M_ITEM_CLASS_L_LANG.ITEM_CLASS_M
         AND M_ITEM_CLASS_L.ITEM_CLASS_S = M_ITEM_CLASS_L_LANG.ITEM_CLASS_S
         AND M_COMPANY_LANG.LANGUAGE_IND = M_ITEM_CLASS_L_LANG.LANGUAGE_IND
        LEFT OUTER JOIN M_ITEM_CLASS M_ITEM_CLASS_M
          ON M_ITEM.ITEM_CLASS_L = M_ITEM_CLASS_M.ITEM_CLASS_L
         AND M_ITEM.ITEM_CLASS_M = M_ITEM_CLASS_M.ITEM_CLASS_M
         AND M_ITEM_CLASS_M.ITEM_CLASS_S   = ' '
         AND M_ITEM_CLASS_M.ITEM_CLASS_IND = '2'
        LEFT OUTER JOIN M_ITEM_CLASS_LANG M_ITEM_CLASS_M_LANG
          ON M_ITEM_CLASS_M.ITEM_CLASS_L = M_ITEM_CLASS_M_LANG.ITEM_CLASS_L
         AND M_ITEM_CLASS_M.ITEM_CLASS_M = M_ITEM_CLASS_M_LANG.ITEM_CLASS_M
         AND M_ITEM_CLASS_M.ITEM_CLASS_S = M_ITEM_CLASS_M_LANG.ITEM_CLASS_S
         AND M_COMPANY_LANG.LANGUAGE_IND = M_ITEM_CLASS_M_LANG.LANGUAGE_IND
        LEFT OUTER JOIN M_ITEM_CLASS M_ITEM_CLASS_S
          ON M_ITEM.ITEM_CLASS_L = M_ITEM_CLASS_S.ITEM_CLASS_L
         AND M_ITEM.ITEM_CLASS_M = M_ITEM_CLASS_S.ITEM_CLASS_M
         AND M_ITEM.ITEM_CLASS_S = M_ITEM_CLASS_S.ITEM_CLASS_S
         AND M_ITEM_CLASS_S.ITEM_CLASS_IND = '3'
        LEFT OUTER JOIN M_ITEM_CLASS_LANG M_ITEM_CLASS_S_LANG
          ON M_ITEM_CLASS_S.ITEM_CLASS_L = M_ITEM_CLASS_S_LANG.ITEM_CLASS_L
         AND M_ITEM_CLASS_S.ITEM_CLASS_M = M_ITEM_CLASS_S_LANG.ITEM_CLASS_M
         AND M_ITEM_CLASS_S.ITEM_CLASS_S = M_ITEM_CLASS_S_LANG.ITEM_CLASS_S
         AND M_COMPANY_LANG.LANGUAGE_IND = M_ITEM_CLASS_S_LANG.LANGUAGE_IND
       WHERE T_ACCEPTANCE.ACCEPT_SEQ = #{storageShipment.acceptSeq, jdbcType=NUMERIC}
    </insert>
    <!-- 会社コード、事業所コード、在庫場所コード、品名コードを元に在庫テーブルのデータ件数を取得します。 -->
    <select id="getStockCount" resultType="java.lang.Integer">
      SELECT COUNT(*)
        FROM T_STOCK
       WHERE COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND ITEM_CD          = #{itemCd, jdbcType=VARCHAR}
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、品名コードを元に在庫テーブルへ登録します。 -->
    <insert id="insertStock">
      INSERT INTO T_STOCK (
        COMPANY_CD
      , SECTION_PLACE_CD
      , STOCK_PLACE_CD
      , ITEM_CD
      , STOCK_VOL
      , UNIT_CD
      , AUTO_DELETE_FLG
      , AUTO_DELETE_DATE
      , LAST_UPD_DATE
      , LAST_UPD_COMPANY_CD
      , LAST_UPD_SECTION_CD
      , LAST_UPD_USER_ID
      , REG_DATE
      , REG_COMPANY_CD
      , REG_SECTION_CD
      , REG_USER_ID
      ) VALUES (
        #{companyCd, jdbcType=VARCHAR}
      , #{sectionPlaceCd, jdbcType=VARCHAR}
      , #{stockPlaceCd, jdbcType=VARCHAR}
      , #{itemCd, jdbcType=VARCHAR}
      , 0
      , NULL
      , '0'
      , NULL
      , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
      , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
      , '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
      , '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
      , '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
      )
    </insert>
    <!-- 出庫情報を元に在庫テーブルの在庫数量に加算します。 -->
    <update id="updateStockByShip">
      UPDATE T_STOCK SET
        STOCK_VOL = STOCK_VOL + #{storageShipment.strgShipVol, jdbcType=NUMERIC}
      , UNIT_CD   = #{storageShipment.unitCd, jdbcType=VARCHAR}
      , LAST_UPD_DATE       = '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
      , LAST_UPD_COMPANY_CD = '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
      , LAST_UPD_SECTION_CD = '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
      , LAST_UPD_USER_ID    = '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
       WHERE COMPANY_CD       = #{storageShipment.shipCompanyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{storageShipment.shipSectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{storageShipment.shipStockPlaceCd, jdbcType=VARCHAR}
         AND ITEM_CD          = #{storageShipment.itemCd, jdbcType=VARCHAR}
    </update>
    <!-- 入庫情報を元に在庫テーブルの在庫数量に加算します。 -->
    <update id="updateStockByStrg">
      UPDATE T_STOCK SET
        STOCK_VOL = STOCK_VOL + #{storageShipment.strgShipVol, jdbcType=NUMERIC}
      , UNIT_CD   = #{storageShipment.unitCd, jdbcType=VARCHAR}
      , LAST_UPD_DATE       = '${@fw.common.util.AppUtil@getSysDateYyyyMMddHHmmssSSS()}'
      , LAST_UPD_COMPANY_CD = '${@fw.security.SecurityUtil@getCompanyCdByEscapeSql()}'
      , LAST_UPD_SECTION_CD = '${@fw.security.SecurityUtil@getDefaultSectionCdByEscapeSql()}'
      , LAST_UPD_USER_ID    = '${@fw.security.SecurityUtil@getUserIdByEscapeSql()}'
       WHERE COMPANY_CD       = #{storageShipment.strgCompanyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{storageShipment.strgSectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{storageShipment.strgStockPlaceCd, jdbcType=VARCHAR}
         AND ITEM_CD          = #{storageShipment.itemCd, jdbcType=VARCHAR}
    </update>
    <resultMap id="sectionPlace_Map" type="fw.domain.mst.organization.sectionplace.SectionPlace">
        <id column="SECTION_PLACE_CD"   property="sectionPlaceCd" />
        <id column="SECTION_PLACE_NAME" property="sectionPlaceName" />
    </resultMap>
    <!-- 注文シーケンス番号、対象日を元に依頼部門の事業所を取得します。 -->
    <select id="getSectionPlaceOfReqSection" resultMap="sectionPlace_Map">
      SELECT M_SECTION.SECTION_PLACE_CD
           , M_SECTION_PLACE_LANG.SECTION_PLACE_NAME
        FROM T_ORDER
       INNER JOIN T_SLIP_MNG
          ON T_ORDER.ORDER_NO = T_SLIP_MNG.SLIP_NO
         AND T_SLIP_MNG.DELETE_FLG = '0'
       INNER JOIN T_PUR_REQUEST
          ON T_ORDER.PUR_REQ_NO = T_PUR_REQUEST.PUR_REQ_NO
         AND T_PUR_REQUEST.NEW_APP_FLG = '1'
         AND T_PUR_REQUEST.DELETE_FLG  = '0'
       INNER JOIN T_PUR_APL
          ON T_PUR_APL.PUR_APL_SEQ = T_PUR_REQUEST.PUR_APL_SEQ
         AND T_PUR_APL.DELETE_FLG = '0'
       INNER JOIN M_SECTION
          ON T_PUR_APL.REQ_COMPANY_CD = M_SECTION.COMPANY_CD
         AND T_PUR_APL.REQ_SECTION_CD = M_SECTION.SECTION_CD
         AND #{targetDate, jdbcType=VARCHAR} BETWEEN M_SECTION.VALID_START_DATE AND M_SECTION.VALID_END_DATE
         AND M_SECTION.TERM_FLG = '0'
       INNER JOIN M_SECTION_PLACE
          ON M_SECTION.COMPANY_CD       = M_SECTION_PLACE.COMPANY_CD
         AND M_SECTION.SECTION_PLACE_CD = M_SECTION_PLACE.SECTION_PLACE_CD
         AND M_SECTION_PLACE.TERM_FLG   = '0'
        LEFT OUTER JOIN M_SECTION_PLACE_LANG
          ON M_SECTION_PLACE.COMPANY_CD        = M_SECTION_PLACE_LANG.COMPANY_CD
         AND M_SECTION_PLACE.SECTION_PLACE_CD  = M_SECTION_PLACE_LANG.SECTION_PLACE_CD
         AND M_SECTION_PLACE_LANG.LANGUAGE_IND = '${@fw.security.SecurityUtil@getCompanyUseLanguageIndByEscapeSql()}'
       WHERE T_ORDER.ORDER_SEQ = #{orderSeq, jdbcType=VARCHAR}
         AND T_ORDER.DELETE_FLG = '0'
    </select>
    <!-- 会社コード、納入先コード、対象日を元に納入先の事業所を取得します。 -->
    <select id="getSectionPlaceOfDeliveryPlace" resultMap="sectionPlace_Map">
      SELECT M_DELIVERY_PLACE.SECTION_PLACE_CD
           , M_SECTION_PLACE_LANG.SECTION_PLACE_NAME
        FROM M_DELIVERY_PLACE
       INNER JOIN M_SECTION_PLACE
          ON M_DELIVERY_PLACE.COMPANY_CD = M_SECTION_PLACE.COMPANY_CD
         AND M_DELIVERY_PLACE.SECTION_PLACE_CD = M_SECTION_PLACE.SECTION_PLACE_CD
         AND M_SECTION_PLACE.TERM_FLG = '0'
        LEFT OUTER JOIN M_SECTION_PLACE_LANG
          ON M_DELIVERY_PLACE.COMPANY_CD       = M_SECTION_PLACE_LANG.COMPANY_CD
         AND M_DELIVERY_PLACE.SECTION_PLACE_CD = M_SECTION_PLACE_LANG.SECTION_PLACE_CD
         AND M_SECTION_PLACE_LANG.LANGUAGE_IND = '${@fw.security.SecurityUtil@getCompanyUseLanguageIndByEscapeSql()}'
       WHERE M_DELIVERY_PLACE.COMPANY_CD     = #{companyCd, jdbcType=VARCHAR}
         AND M_DELIVERY_PLACE.DELIV_PLACE_CD = #{delivPlaceCd, jdbcType=VARCHAR}
         AND #{targetDate, jdbcType=VARCHAR} BETWEEN M_DELIVERY_PLACE.VALID_START_DATE AND M_DELIVERY_PLACE.VALID_END_DATE
         AND M_DELIVERY_PLACE.TERM_FLG = '0'
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、品名コードを元に在庫テーブルから在庫数量を取得します。 -->
    <select id="getStockVol" resultType="BigDecimal">
      SELECT COALESCE(STOCK_VOL, 0)
        FROM T_STOCK
       WHERE COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND ITEM_CD          = #{itemCd, jdbcType=VARCHAR}
    </select>
    <!-- 入出庫実績を元に在庫を合成したSQL -->
    <sql id="syntheticStrgShipResultsSql">
      SELECT(CASE STRG_SHIP_IND
             WHEN N'1' THEN STRG_COMPANY_CD
             WHEN N'2' THEN SHIP_COMPANY_CD
             ELSE NULL END) AS COMPANY_CD
           ,(CASE STRG_SHIP_IND
             WHEN N'1' THEN STRG_SECTION_PLACE_CD
             WHEN N'2' THEN SHIP_SECTION_PLACE_CD
             ELSE NULL END) AS SECTION_PLACE_CD
           ,(CASE STRG_SHIP_IND
             WHEN N'1' THEN STRG_STOCK_PLACE_CD
             WHEN N'2' THEN SHIP_STOCK_PLACE_CD
             ELSE NULL END) AS STOCK_PLACE_CD
           , ITEM_CD
           , STRG_SHIP_DATE
           ,(CASE WHEN COALESCE(M_COND.COND_VALUE, N'${@fw.common.constant.SystemCodeConstant@CUTOFF_DATE}') &gt; N'${@fw.common.constant.SystemCodeConstant@CUTOFF_DATE}'
                  <!-- 設定マスタの締日が 31 を超えた場合、月末締日とし棚卸年月を入出庫月とする -->
                  THEN SUBSTR(STRG_SHIP_DATE, 1, 6)
                  <!-- 設定マスタの締日が 31 以下の場合 -->
                  ELSE(CASE WHEN COALESCE(M_COND.COND_VALUE, N'${@fw.common.constant.SystemCodeConstant@CUTOFF_DATE}') &gt;= SUBSTR(STRG_SHIP_DATE, 7, 2)
                            <!-- 入出庫日が締日以下の場合は、棚卸年月を入出庫月とする -->
                            THEN SUBSTR(STRG_SHIP_DATE, 1, 6)
                            <!-- 入出庫日が締日を超えた場合は、棚卸年月を入出庫月の翌月とする -->
                            ELSE TO_NCHAR(ADD_MONTHS(TO_DATE(SUBSTR(STRG_SHIP_DATE, 1, 6) || '01', 'YYYYMMDD'), 1), 'YYYYMM')
                       END)
             END) AS INV_YEAR_MONTH
           , STRG_SHIP_VOL
           , SETTLE_INV_IND
           , T_STRG_SHIP_RESULTS.REG_DATE
        FROM T_STRG_SHIP_RESULTS
        LEFT OUTER JOIN M_COND
          ON M_COND.COND_KEY = '${@fw.common.constant.ElementNameConstant@CUTOFF_DATE}'
       WHERE STRG_SHIP_IND IN ('1', '2')
    </sql>
    <!-- 会社コード、事業所コード、在庫場所コード、棚卸年月、品名コードを元に棚卸年月末迄の在庫数量を取得します。 -->
    <select id="getMonthStockVol" resultType="BigDecimal">
        WITH V_STRG_SHIP_RESULTS AS
     (<include refid="syntheticStrgShipResultsSql"/>)
      SELECT COALESCE(T_STOCK.STOCK_VOL, 0) - COALESCE(
              (SELECT SUM(V_STRG_SHIP_RESULTS.STRG_SHIP_VOL)
                 FROM V_STRG_SHIP_RESULTS
                WHERE T_STOCK.COMPANY_CD       = V_STRG_SHIP_RESULTS.COMPANY_CD
                  AND T_STOCK.SECTION_PLACE_CD = V_STRG_SHIP_RESULTS.SECTION_PLACE_CD
                  AND T_STOCK.STOCK_PLACE_CD   = V_STRG_SHIP_RESULTS.STOCK_PLACE_CD
                  AND T_STOCK.ITEM_CD          = V_STRG_SHIP_RESULTS.ITEM_CD
                  AND V_STRG_SHIP_RESULTS.INV_YEAR_MONTH &gt; #{invYearMonth, jdbcType=VARCHAR}
             ), 0)
        FROM T_STOCK
       WHERE T_STOCK.COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND T_STOCK.SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND T_STOCK.STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND T_STOCK.ITEM_CD          = #{itemCd, jdbcType=VARCHAR}
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、棚卸年月、品名コードを元に棚卸年月後に発生した在庫数量を取得します。 -->
    <select id="getNextMonthStockVol" resultType="BigDecimal">
        WITH V_STRG_SHIP_RESULTS AS
     (<include refid="syntheticStrgShipResultsSql"/>)
      SELECT COALESCE(SUM(V_STRG_SHIP_RESULTS.STRG_SHIP_VOL), 0)
        FROM V_STRG_SHIP_RESULTS
       WHERE V_STRG_SHIP_RESULTS.COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND V_STRG_SHIP_RESULTS.SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND V_STRG_SHIP_RESULTS.STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND V_STRG_SHIP_RESULTS.ITEM_CD          = #{itemCd, jdbcType=VARCHAR}
         AND V_STRG_SHIP_RESULTS.INV_YEAR_MONTH &gt; #{invYearMonth, jdbcType=VARCHAR}
    </select>
    <!-- 会社コード、事業所コード、在庫場所コードを元に在庫テーブルから在庫場所内の在庫数量合計を取得します。 -->
    <select id="getCountTotalStockVol" resultType="Long">
      SELECT SUM(COALESCE(STOCK_VOL, 0))
        FROM T_STOCK
       WHERE COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
    GROUP BY COMPANY_CD
           , SECTION_PLACE_CD
           , STOCK_PLACE_CD
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、棚卸年月を元に在庫ロックフラグを取得します。 -->
    <select id="getStockLockFlgOfInventory" resultType="String">
      SELECT(CASE WHEN T_INVENTORY_MNG.COMPANY_CD IS NULL
                  <!-- 1. 棚卸年月に合致する棚卸管理テーブルに存在しない場合は、前回棚卸年月を元に判定する -->
                  THEN(CASE WHEN V_INVENTORY_MNG.LAST_INV_YEAR_MONTH &gt; #{invYearMonth, jdbcType=VARCHAR}
                            <!-- 1-1. 前回棚卸年月＞棚卸年月の場合は、ロックする -->
                            THEN N'${@fw.common.options.stock.constant.CodeNameConstantForStock@STOCK_LOCK_FLG}'
                            <!-- 1-2. 上記以外は、ロックしない -->
                            ELSE N'${@fw.common.options.stock.constant.CodeNameConstantForStock@STOCK_LOCK_FLG_UN}'
                       END)
                  <!-- 2. 棚卸年月に合致する棚卸管理テーブルに存在する場合は、棚卸状態区分を元に判定する -->
                  ELSE(CASE WHEN T_INVENTORY_MNG.INV_STATUS_IND IN (
                                  '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_SETTLING}'
                                 , '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_SETTLE_END}'
                                 , '${@fw.common.options.stock.constant.CodeNameConstantForStock@INV_STATUS_IND_SETTLE_CANCELLING}'
                                 )
                            <!-- 2-1. 棚卸の状態区分が 5:決済中, 6:棚卸済, 7:決済取消中のいづれかの場合は、ロックする -->
                            THEN N'${@fw.common.options.stock.constant.CodeNameConstantForStock@STOCK_LOCK_FLG}'
                            <!-- 2-2. 上記以外は、ロックしない -->
                            ELSE M_STOCK_PLACE.STOCK_LOCK_FLG
                       END)
             END)
        FROM M_STOCK_PLACE
        LEFT OUTER JOIN T_INVENTORY_MNG
          ON M_STOCK_PLACE.COMPANY_CD       = T_INVENTORY_MNG.COMPANY_CD
         AND M_STOCK_PLACE.SECTION_PLACE_CD = T_INVENTORY_MNG.SECTION_PLACE_CD
         AND M_STOCK_PLACE.STOCK_PLACE_CD   = T_INVENTORY_MNG.STOCK_PLACE_CD
         AND T_INVENTORY_MNG.INV_YEAR_MONTH = #{invYearMonth, jdbcType=VARCHAR}
             <!-- 棚卸年月の最大値（前回棚卸年月）を算出 -->
        LEFT OUTER JOIN
            (SELECT MAX(INV_YEAR_MONTH) AS LAST_INV_YEAR_MONTH
               FROM T_INVENTORY_MNG
              WHERE COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
                AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
                AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
             ) V_INVENTORY_MNG
          ON 1 = 1
       WHERE M_STOCK_PLACE.COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND M_STOCK_PLACE.SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND M_STOCK_PLACE.STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND M_STOCK_PLACE.TERM_FLG = '0'
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、対象年月を元に入出庫実績に存在するデータが棚卸テーブルに存在しない（一致しない）マップリストを取得します。 -->
    <select id="getMapListInventoryMismatched" resultType="hashmap">
        WITH V_STRG_SHIP_RESULTS AS
     (<include refid="syntheticStrgShipResultsSql"/>)
      SELECT V_STRG_SHIP_RESULTS.COMPANY_CD
           , V_STRG_SHIP_RESULTS.SECTION_PLACE_CD
           , V_STRG_SHIP_RESULTS.STOCK_PLACE_CD
           , V_STRG_SHIP_RESULTS.INV_YEAR_MONTH
           , V_STRG_SHIP_RESULTS.ITEM_CD
           , SUM(COALESCE(V_STRG_SHIP_RESULTS.STRG_SHIP_VOL, 0)) AS STRG_SHIP_VOL
        FROM V_STRG_SHIP_RESULTS
       WHERE V_STRG_SHIP_RESULTS.COMPANY_CD        = #{companyCd, jdbcType=VARCHAR}
         AND V_STRG_SHIP_RESULTS.SECTION_PLACE_CD  = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND V_STRG_SHIP_RESULTS.STOCK_PLACE_CD    = #{stockPlaceCd, jdbcType=VARCHAR}
         AND V_STRG_SHIP_RESULTS.INV_YEAR_MONTH    = #{targetYearMonth, jdbcType=VARCHAR}
         AND NOT EXISTS
            (SELECT 1 FROM T_INVENTORY
              WHERE V_STRG_SHIP_RESULTS.COMPANY_CD       = T_INVENTORY.COMPANY_CD
                AND V_STRG_SHIP_RESULTS.SECTION_PLACE_CD = T_INVENTORY.SECTION_PLACE_CD
                AND V_STRG_SHIP_RESULTS.STOCK_PLACE_CD   = T_INVENTORY.STOCK_PLACE_CD
                AND V_STRG_SHIP_RESULTS.INV_YEAR_MONTH   = T_INVENTORY.INV_YEAR_MONTH
                AND V_STRG_SHIP_RESULTS.ITEM_CD          = T_INVENTORY.ITEM_CD)
    GROUP BY V_STRG_SHIP_RESULTS.COMPANY_CD
           , V_STRG_SHIP_RESULTS.SECTION_PLACE_CD
           , V_STRG_SHIP_RESULTS.STOCK_PLACE_CD
           , V_STRG_SHIP_RESULTS.INV_YEAR_MONTH
           , V_STRG_SHIP_RESULTS.ITEM_CD
    ORDER BY V_STRG_SHIP_RESULTS.ITEM_CD
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、対象年月を元に棚卸結果入力後に発生した入出庫実績データのマップリストを取得します。 -->
    <select id="getMapListGeneratedInventoryAfterInputted" resultType="hashmap">
        WITH V_STRG_SHIP_RESULTS AS
     (<include refid="syntheticStrgShipResultsSql"/>)
      SELECT T_INVENTORY.COMPANY_CD
           , T_INVENTORY.SECTION_PLACE_CD
           , T_INVENTORY.STOCK_PLACE_CD
           , T_INVENTORY.INV_YEAR_MONTH
           , T_INVENTORY.ITEM_CD
           , SUM(COALESCE(V_STRG_SHIP_RESULTS.STRG_SHIP_VOL, 0)) AS STRG_SHIP_VOL
        FROM T_INVENTORY
       INNER JOIN V_STRG_SHIP_RESULTS
          ON T_INVENTORY.COMPANY_CD       = V_STRG_SHIP_RESULTS.COMPANY_CD
         AND T_INVENTORY.SECTION_PLACE_CD = V_STRG_SHIP_RESULTS.SECTION_PLACE_CD
         AND T_INVENTORY.STOCK_PLACE_CD   = V_STRG_SHIP_RESULTS.STOCK_PLACE_CD
         AND T_INVENTORY.INV_YEAR_MONTH   = V_STRG_SHIP_RESULTS.INV_YEAR_MONTH
         AND T_INVENTORY.ITEM_CD          = V_STRG_SHIP_RESULTS.ITEM_CD
         AND T_INVENTORY.INPUT_INV_DATE &lt; V_STRG_SHIP_RESULTS.REG_DATE
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(settleInvInd)">
         AND V_STRG_SHIP_RESULTS.SETTLE_INV_IND = #{settleInvInd, jdbcType=VARCHAR}
        </if>
       WHERE T_INVENTORY.COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND T_INVENTORY.SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND T_INVENTORY.STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND T_INVENTORY.INV_YEAR_MONTH   = #{targetYearMonth, jdbcType=VARCHAR}
    GROUP BY T_INVENTORY.COMPANY_CD
           , T_INVENTORY.SECTION_PLACE_CD
           , T_INVENTORY.STOCK_PLACE_CD
           , T_INVENTORY.INV_YEAR_MONTH
           , T_INVENTORY.ITEM_CD
    ORDER BY T_INVENTORY.ITEM_CD
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、棚卸年月を元に棚卸テーブルから未入力件数を取得します。 -->
    <select id="getCountNonInventoryInputted" resultType="Long">
      SELECT COUNT(1)
        FROM T_INVENTORY
       WHERE COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND INV_YEAR_MONTH   = #{invYearMonth, jdbcType=VARCHAR}
         AND(INVENTORY_VOL IS NULL OR INPUT_INV_DATE IS NULL)
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、棚卸年月を元に棚卸テーブルから入力済件数を取得します。 -->
    <select id="getCountInventoryInputted" resultType="Long">
      SELECT COUNT(1)
        FROM T_INVENTORY
       WHERE COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND INV_YEAR_MONTH   = #{invYearMonth, jdbcType=VARCHAR}
         AND(INVENTORY_VOL IS NOT NULL OR INPUT_INV_DATE IS NOT NULL)
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、対象年月を元に直近の棚卸年月を取得します。 -->
    <select id="getLatestInvYearMonth" resultType="String">
        WITH V_INVENTORY_MNG AS
     (SELECT ROW_NUMBER() OVER (PARTITION BY COMPANY_CD, SECTION_PLACE_CD, STOCK_PLACE_CD ORDER BY INV_YEAR_MONTH DESC) AS NO
           , COMPANY_CD
           , SECTION_PLACE_CD
           , STOCK_PLACE_CD
           , INV_YEAR_MONTH
        FROM T_INVENTORY_MNG
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(targetYearMonth)">
       WHERE INV_YEAR_MONTH &lt;= #{targetYearMonth, jdbcType=VARCHAR}
        </if>)
      SELECT INV_YEAR_MONTH
        FROM V_INVENTORY_MNG
       WHERE NO = 1
         AND COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、対象年月を元に直近の棚卸の状態区分を取得します。 -->
    <select id="getLatestInvStatusInd" resultType="String">
        WITH V_INVENTORY_MNG AS
     (SELECT ROW_NUMBER() OVER (PARTITION BY COMPANY_CD, SECTION_PLACE_CD, STOCK_PLACE_CD ORDER BY INV_YEAR_MONTH DESC) AS NO
           , COMPANY_CD
           , SECTION_PLACE_CD
           , STOCK_PLACE_CD
           , INV_YEAR_MONTH
        FROM T_INVENTORY_MNG
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(targetYearMonth)">
       WHERE INV_YEAR_MONTH &lt;= #{targetYearMonth, jdbcType=VARCHAR}
        </if>)
      SELECT T_INVENTORY_MNG.INV_STATUS_IND
        FROM T_INVENTORY_MNG
       INNER JOIN V_INVENTORY_MNG
          ON T_INVENTORY_MNG.COMPANY_CD       = V_INVENTORY_MNG.COMPANY_CD
         AND T_INVENTORY_MNG.SECTION_PLACE_CD = V_INVENTORY_MNG.SECTION_PLACE_CD
         AND T_INVENTORY_MNG.STOCK_PLACE_CD   = V_INVENTORY_MNG.STOCK_PLACE_CD
         AND T_INVENTORY_MNG.INV_YEAR_MONTH   = V_INVENTORY_MNG.INV_YEAR_MONTH
         AND V_INVENTORY_MNG.NO = 1
       WHERE T_INVENTORY_MNG.COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND T_INVENTORY_MNG.SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND T_INVENTORY_MNG.STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
    </select>
    <!-- 会社コード、事業所コード、在庫場所コード、棚卸年月を元に棚卸状態区分を取得します。 -->
    <select id="getInvStatusInd" resultType="String">
      SELECT INV_STATUS_IND
        FROM T_INVENTORY_MNG
       WHERE COMPANY_CD       = #{companyCd, jdbcType=VARCHAR}
         AND SECTION_PLACE_CD = #{sectionPlaceCd, jdbcType=VARCHAR}
         AND STOCK_PLACE_CD   = #{stockPlaceCd, jdbcType=VARCHAR}
         AND INV_YEAR_MONTH   = #{invYearMonth, jdbcType=VARCHAR}
    </select>

</mapper>